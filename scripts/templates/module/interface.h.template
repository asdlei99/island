#ifndef GUARD_@module_name@_H
#define GUARD_@module_name@_H

#include <stdint.h>
#include "pal_api_loader/ApiRegistry.hpp"

#ifdef __cplusplus
extern "C" {
#endif

struct @module_name@_o;

void register_@module_name@_api( void *api );

// clang-format off
struct @module_name@_api {
	static constexpr auto id      = "@module_name@";
	static constexpr auto pRegFun = register_@module_name@_api;

	struct @module_name@_interface_t {

		@module_name@_o *    ( * create                   ) ( );
		void                 ( * destroy                  ) ( @module_name@_o* self );
		void                 ( * update                   ) ( @module_name@_o* self );


	};

	@module_name@_interface_t       @module_name@_i;
};
// clang-format on

#ifdef __cplusplus
} // extern c

namespace @module_name@ {
#	ifdef PLUGINS_DYNAMIC
const auto api = Registry::addApiDynamic<@module_name@_api>( true );
#	else
const auto api = Registry::addApiStatic<@module_name@_api>();
#	endif

static const auto &@module_name@_i = api -> @module_name@_i;

} // namespace

class @module_name_camelcase_capitalised@ : NoCopy, NoMove {

	@module_name@_o *self;

  public:
	@module_name_camelcase_capitalised@()
	    : self( @module_name@_i.create() ) {
	}

	~@module_name_camelcase_capitalised@() {
		@module_name@_i.destroy( self );
	}

	void update() {
		@module_name@_i.update( self );
	}
};


#endif // __cplusplus

#endif
